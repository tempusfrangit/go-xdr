// Code generated by xdrgen. DO NOT EDIT.
// Source: examples/mixed-manual/types.go
// Generated 1 XDR types

package main

import (
	"fmt"
	"github.com/tempusfrangit/go-xdr"
)

func (v *MessageHeader) Encode(enc *xdr.Encoder) error {

	if err := enc.EncodeUint32(v.Version); err != nil {
		return fmt.Errorf("failed to encode Version: %w", err)
	}

	if err := enc.EncodeUint32(v.MessageID); err != nil {
		return fmt.Errorf("failed to encode MessageID: %w", err)
	}

	if err := enc.EncodeUint32(v.Timestamp); err != nil {
		return fmt.Errorf("failed to encode Timestamp: %w", err)
	}

	return nil
}

func (v *MessageHeader) Decode(dec *xdr.Decoder) error {

	tempVersion, err := dec.DecodeUint32()
	if err != nil {
		return fmt.Errorf("failed to decode Version: %w", err)
	}
	v.Version = tempVersion

	tempMessageID, err := dec.DecodeUint32()
	if err != nil {
		return fmt.Errorf("failed to decode MessageID: %w", err)
	}
	v.MessageID = tempMessageID

	tempTimestamp, err := dec.DecodeUint32()
	if err != nil {
		return fmt.Errorf("failed to decode Timestamp: %w", err)
	}
	v.Timestamp = tempTimestamp

	return nil
}

var _ xdr.Codec = (*MessageHeader)(nil)
