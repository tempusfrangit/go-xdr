// Code generated by xdrgen. DO NOT EDIT.
// Source: types.go
// Generated 1 XDR types

package consumer

import (
	"fmt"
	"github.com/tempusfrangit/go-xdr"

	"synthetic_test/tokenlib"
)

func (v *Request) Encode(enc *xdr.Encoder) error {

	if err := enc.EncodeBytes([]byte(v.UserToken)); err != nil {
		return fmt.Errorf("failed to encode UserToken: %w", err)
	}

	if err := enc.EncodeString(string(v.SessionID)); err != nil {
		return fmt.Errorf("failed to encode SessionID: %w", err)
	}

	if err := enc.EncodeFixedBytes(v.Checksum[:]); err != nil {
		return fmt.Errorf("failed to encode Checksum: %w", err)
	}

	return nil
}

func (v *Request) Decode(dec *xdr.Decoder) error {

	tempUserToken, err := dec.DecodeBytes()
	if err != nil {
		return fmt.Errorf("failed to decode UserToken: %w", err)
	}
	v.UserToken = tokenlib.Token(tempUserToken)

	tempSessionID, err := dec.DecodeString()
	if err != nil {
		return fmt.Errorf("failed to decode SessionID: %w", err)
	}
	v.SessionID = tokenlib.ID(tempSessionID)

	if err := dec.DecodeFixedBytesInto(v.Checksum[:]); err != nil {
		return fmt.Errorf("failed to decode Checksum: %w", err)
	}

	return nil
}

var _ xdr.Codec = (*Request)(nil)
